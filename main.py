import requests
import json
import math
import csv
import time
import os

def spider_detail():
    # start from this page
    start_page = 1

    total_page = 999
    # just spider data with app
    app = True

    if os.path.exists("step.txt"):
        with open("step.txt", 'r') as nf:
            start_page = int(nf.readline(), 10)

    print("start page:", start_page)

    f = open("exploitDB.csv", 'a', newline='')
    w = csv.writer(f)
    w.writerow(['typeid', 'platform', 'app_url', 'description', 'detail', 'data'])

    for page in range(start_page, total_page+1):
        print("step: ", page, ", total: ", total_page,", sleeping---------------")
        time.sleep(10)

        cookie = '_ga=GA1.3.42859140.1574217510; _gid=GA1.3.323047466.1574217510; _ga=GA1.2.42859140.1574217510; _gid=GA1.2.323047466.1574217510; OptanonConsent=isIABGlobal=false&datestamp=Wed+Nov+20+2019+20%3A04%3A47+GMT%2B0800+(%E4%B8%AD%E5%9B%BD%E6%A0%87%E5%87%86%E6%97%B6%E9%97%B4)&version=5.7.0&landingPath=NotLandingPage&groups=1%3A1%2C0_1111%3A1%2C0_1106%3A1%2C2%3A1%2C0_1110%3A1%2C0_1108%3A1%2C3%3A1%2C8%3A1&AwaitingReconsent=false; XSRF-TOKEN=eyJpdiI6InZcL3YyM0NIaTlocm1KNTZ6YWVmMitRPT0iLCJ2YWx1ZSI6IlpcL1ZnMGtYeEp5T2YzT1wvbHRKRzRJS3M1U3NkODdscVwvRXZrbFRuOXlOYkVMQlRBOUhIK2grUEFyODdRblZ4cEkiLCJtYWMiOiJmMTljMzUyYWFiODlhZTc4ZGE1ZDY2NzZlYWZlYzBiZGVlYWY0YjEwN2NiNDI2MDJhNWM0NTAwY2JkYTJiMTY2In0%3D; exploit_database_session=eyJpdiI6InlleHd5K0djbHFJZVBrYWlaZ2FlVmc9PSIsInZhbHVlIjoiWWliTCtjTHFWdVhaTlZ0U3dxN0tlRkh5dEluK01ub09WQ1B6bEU1REV2V2FiOEZPNWZKcmJsNWJVYllUUGpldSIsIm1hYyI6ImY1MDg3MDQ1YTA0ODVjMmM3OTZkNjJjMDZhYTU1NzI5YjE3M2I5YjU3NGE0ZDdlZjRmNTk0ZmMyOGNlNmJmYmMifQ%3D%3D; _gat=1'

        long_str = ''
        if app:
            long_str = 'draw='+str(page+1)+'&columns%5B0%5D%5Bdata%5D=date_published&columns%5B0%5D%5Bname%5D=date_published&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=download&columns%5B1%5D%5Bname%5D=download&columns%5B1%5D%5Bsearchable%5D=false&columns%5B1%5D%5Borderable%5D=false&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=application_md5&columns%5B2%5D%5Bname%5D=application_md5&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=false&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=%5B%5E%0A%5D%2B&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=true&columns%5B3%5D%5Bdata%5D=verified&columns%5B3%5D%5Bname%5D=verified&columns%5B3%5D%5Bsearchable%5D=true&columns%5B3%5D%5Borderable%5D=false&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=description&columns%5B4%5D%5Bname%5D=description&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=false&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=type_id&columns%5B5%5D%5Bname%5D=type_id&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=false&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=platform_id&columns%5B6%5D%5Bname%5D=platform_id&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=false&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=author_id&columns%5B7%5D%5Bname%5D=author_id&columns%5B7%5D%5Bsearchable%5D=false&columns%5B7%5D%5Borderable%5D=false&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B8%5D%5Bdata%5D=code&columns%5B8%5D%5Bname%5D=code.code&columns%5B8%5D%5Bsearchable%5D=true&columns%5B8%5D%5Borderable%5D=true&columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B9%5D%5Bdata%5D=id&columns%5B9%5D%5Bname%5D=id&columns%5B9%5D%5Bsearchable%5D=false&columns%5B9%5D%5Borderable%5D=true&columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=9&order%5B0%5D%5Bdir%5D=desc&start='+str((page-1)*15)+'&length=15&search%5Bvalue%5D=&search%5Bregex%5D=false&author=&port=&type=&tag=&platform='
        else:
            long_str = 'draw='+str(page+1)+'&columns%5B0%5D%5Bdata%5D=date_published&columns%5B0%5D%5Bname%5D=date_published&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=download&columns%5B1%5D%5Bname%5D=download&columns%5B1%5D%5Bsearchable%5D=false&columns%5B1%5D%5Borderable%5D=false&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=application_md5&columns%5B2%5D%5Bname%5D=application_md5&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=false&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=true&columns%5B3%5D%5Bdata%5D=verified&columns%5B3%5D%5Bname%5D=verified&columns%5B3%5D%5Bsearchable%5D=true&columns%5B3%5D%5Borderable%5D=false&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=description&columns%5B4%5D%5Bname%5D=description&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=false&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=type_id&columns%5B5%5D%5Bname%5D=type_id&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=false&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=platform_id&columns%5B6%5D%5Bname%5D=platform_id&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=false&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=author_id&columns%5B7%5D%5Bname%5D=author_id&columns%5B7%5D%5Bsearchable%5D=false&columns%5B7%5D%5Borderable%5D=false&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B8%5D%5Bdata%5D=code&columns%5B8%5D%5Bname%5D=code.code&columns%5B8%5D%5Bsearchable%5D=true&columns%5B8%5D%5Borderable%5D=true&columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B9%5D%5Bdata%5D=id&columns%5B9%5D%5Bname%5D=id&columns%5B9%5D%5Bsearchable%5D=false&columns%5B9%5D%5Borderable%5D=true&columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=9&order%5B0%5D%5Bdir%5D=desc&start='+str((page-1)*15)+'&length=15&search%5Bvalue%5D=&search%5Bregex%5D=false&author=&port=&type=&tag=&platform='

        response = requests.get(url='https://www.exploit-db.com/?'+long_str,
                                headers={'authority': 'www.exploit-db.com','method': 'GET','path':'/?'+long_str,
        'scheme': 'https','accept': 'application/json, text/javascript, */*; q=0.01','accept-encoding': 'gzip, deflate, br','accept-language': 'zh-CN,zh;q=0.9','cookie': cookie,
        'referer': 'https://www.exploit-db.com/','user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
        'x-requested-with': 'XMLHttpRequest'})

        r = json.loads(response.text)
        if total_page == 999:
            now = r['recordsFiltered']
            total_page = math.ceil(now/15)
            print("total page:", total_page)

        for i in r['data']:

            row = [i['type_id'], i['platform_id'],
                   'https://www.exploit-db.com' + i['application_md5'].split('"')[1],
                   i['description'][1].replace("&#039;", "'"),
                   i['description'][1].split('- ')[1].replace("&#039;", "'"),
                   i['date_published']]

            w.writerow(row)
            with open("step.txt", 'w') as nf:
                nf.write(str(page))


    f.close()
    print("all is done!")


def download_apps():

    dir = "F:/abin_files/Download/"
    if not os.path.isdir(dir):
        os.mkdir(dir)

    f = open("exploitDB.csv", 'r', newline='')
    r = csv.reader(f)
    next(f, None)
    for i in r:
        path = dir + i[2].split("/apps/")[1]
        if os.path.exists(path):
            print("app ", path, "was existed!")
            continue
        print("downloading: ", i[2], "---->", path)

        try:
            req = requests.get(i[2])
            with open(path, "wb") as nf:
                nf.write(req.content)
        except Exception as e:
            print(path, " : failed!")
            continue



if __name__ == '__main__':
    spider_detail()
    # download_apps()